"use strict";(self.webpackChunkdocusaurus_demo=self.webpackChunkdocusaurus_demo||[]).push([[8820],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return d}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),s=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=s(e.components);return t.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=s(n),d=a,y=f["".concat(l,".").concat(d)]||f[d]||p[d]||i;return n?t.createElement(y,o(o({ref:r},u),{},{components:n})):t.createElement(y,o({ref:r},u))}));function d(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=n[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},4951:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return f}});var t=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],c={title:"\u6761\u4ef6\u8bed\u53e5"},l="Better Conditionals",s={unversionedId:"javascript/snippets/conditional",id:"javascript/snippets/conditional",isDocsHomePage:!1,title:"\u6761\u4ef6\u8bed\u53e5",description:"Array.includes",source:"@site/docs/javascript/snippets/conditional.md",sourceDirName:"javascript/snippets",slug:"/javascript/snippets/conditional",permalink:"/docs/javascript/snippets/conditional",tags:[],version:"current",frontMatter:{title:"\u6761\u4ef6\u8bed\u53e5"},sidebar:"JavaScript",previous:{title:"Basic",permalink:"/docs/javascript/typescript/basic"},next:{title:"\u5b9e\u7528\u51fd\u6570",permalink:"/docs/javascript/snippets/functions"}},u=[{value:"Array.includes",id:"arrayincludes",children:[],level:3},{value:"Return Early",id:"return-early",children:[],level:3},{value:"Use Default Function Parameters And Destructuring",id:"use-default-function-parameters-and-destructuring",children:[],level:3},{value:"Favor Map/Object Literal than Switch Statement",id:"favor-mapobject-literal-than-switch-statement",children:[],level:3},{value:"Array.filter, Array.every, Array.any",id:"arrayfilter-arrayevery-arrayany",children:[],level:3}],p={toc:u};function f(e){var r=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"better-conditionals"},"Better Conditionals"),(0,i.kt)("h3",{id:"arrayincludes"},"Array.includes"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"function test(fruit) {\n    if (fruit == 'apple' || fruit == 'strawberry') {\n        console.log('red');\n    }\n}\n\nfunction test(fruit) {\n    // extract conditions to array\n    const redFruits = ['apple', 'strawberry', 'cherry', 'cranberries'];\n    if (redFruits.includes(fruit)) {\n        console.log('red');\n    }\n}\n")),(0,i.kt)("h3",{id:"return-early"},"Return Early"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"/_ return early when invalid conditions found _/;\n\nfunction test(fruit, quantity) {\n    const redFruits = ['apple', 'strawberry', 'cherry', 'cranberries'];\n\n    if (!fruit) throw new Error('No fruit!'); // condition 1: throw error early\n    if (!redFruits.includes(fruit)) return; // condition 2: stop when fruit is not red\n\n    console.log('red');\n\n    // condition 3: must be big quantity\n    if (quantity > 10) {\n        console.log('big quantity');\n    }\n}\n")),(0,i.kt)("h3",{id:"use-default-function-parameters-and-destructuring"},"Use Default Function Parameters And Destructuring"),(0,i.kt)("h3",{id:"favor-mapobject-literal-than-switch-statement"},"Favor Map/Object Literal than Switch Statement"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"function test(color) {\n    // use switch case to find fruits in color\n    switch (color) {\n        case 'red':\n            return ['apple', 'strawberry'];\n        case 'yellow':\n            return ['banana', 'pineapple'];\n        case 'purple':\n            return ['grape', 'plum'];\n        default:\n            return [];\n    }\n}\n\n// use object literal to find fruits in color\nconst fruitColor = {\n    red: ['apple', 'strawberry'],\n    yellow: ['banana', 'pineapple'],\n    purple: ['grape', 'plum'],\n};\n\nfunction test(color) {\n    return fruitColor[color] || [];\n}\n\n// use Map to find fruits in color\nconst fruitColor = new Map()\n    .set('red', ['apple', 'strawberry'])\n    .set('yellow', ['banana', 'pineapple'])\n    .set('purple', ['grape', 'plum']);\n\nfunction test(color) {\n    return fruitColor.get(color) || [];\n}\n")),(0,i.kt)("h3",{id:"arrayfilter-arrayevery-arrayany"},"Array.filter, Array.every, Array.any"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const fruits = [\n    { name: 'apple', color: 'red' },\n    { name: 'banana', color: 'yellow' },\n    { name: 'grape', color: 'purple' },\n];\n\nfunction test(color) {\n    // use Array filter to find fruits in color\n    return fruits.filter(f => f.color == color);\n}\n\nfunction test() {\n    // condition: short way, all fruits must be red\n    const isAllRed = fruits.every(f => f.color == 'red');\n    console.log(isAllRed); // false\n}\n\nfunction test() {\n    // condition: if any fruit is red\n    const isAnyRed = fruits.some(f => f.color == 'red');\n    console.log(isAnyRed); // true\n}\n")))}f.isMDXComponent=!0}}]);