"use strict";(self.webpackChunkdocusaurus_demo=self.webpackChunkdocusaurus_demo||[]).push([[9679],{7168:(n,e,i)=>{i.d(e,{R:()=>l,x:()=>o});var t=i(30758);const r={},s=t.createContext(r);function l(n){const e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),t.createElement(s.Provider,{value:e},n.children)}},11295:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"algorithm/application/binary-search","title":"\u4e8c\u5206\u67e5\u627e","description":"\u601d\u8def\u5f88\u7b80\u5355\uff0c\u7ec6\u8282\u662f\u9b54\u9b3c\u3002","source":"@site/docs/algorithm/application/binary-search.md","sourceDirName":"algorithm/application","slug":"/algorithm/application/binary-search","permalink":"/docs/algorithm/application/binary-search","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"\u4e8c\u5206\u67e5\u627e"},"sidebar":"algorithm","previous":{"title":"Dijkstra","permalink":"/docs/algorithm/graphs/dijkstra"},"next":{"title":"\u5feb\u6162\u6307\u9488","permalink":"/docs/algorithm/application/double-pointer"}}');var r=i(86070),s=i(7168);const l={title:"\u4e8c\u5206\u67e5\u627e"},o=void 0,a={},h=[{value:"\u67e5\u627e\u4e00\u4e2a\u6570",id:"\u67e5\u627e\u4e00\u4e2a\u6570",level:2},{value:"\u67e5\u627e\u5de6\u4fa7\u8fb9\u754c",id:"\u67e5\u627e\u5de6\u4fa7\u8fb9\u754c",level:2},{value:"\u67e5\u627e\u53f3\u4fa7\u8fb9\u754c",id:"\u67e5\u627e\u53f3\u4fa7\u8fb9\u754c",level:2}];function d(n){const e={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.admonition,{title:"\u4e8c\u5206\u67e5\u627e",type:"tip",children:(0,r.jsx)(e.p,{children:"\u601d\u8def\u5f88\u7b80\u5355\uff0c\u7ec6\u8282\u662f\u9b54\u9b3c\u3002"})}),"\n",(0,r.jsx)(e.p,{children:"\u4e8c\u5206\u67e5\u627e\u53ef\u4ee5\u5206\u4e3a\u67e5\u627e\u4e00\u4e2a\u6570\uff0c\u67e5\u627e\u5de6\u8fb9\u754c\uff0c\u67e5\u627e\u53f3\u8fb9\u754c\u4e09\u79cd\u60c5\u51b5\u3002\u5199\u4ee3\u7801\u5f88\u5bb9\u6613\u5728\u533a\u95f4\u5f00\u95ed\u3001mid +/- 1\u3001\u8fd4\u56de\u503c(\u5de6/\u53f3\u4fa7\u8fb9\u754c\u60c5\u51b5\u4e0b)\u7b49\u7ec6\u8282\u51fa\u95ee\u9898\u3002"}),"\n",(0,r.jsx)(e.h2,{id:"\u67e5\u627e\u4e00\u4e2a\u6570",children:"\u67e5\u627e\u4e00\u4e2a\u6570"}),"\n",(0,r.jsxs)(e.p,{children:["\u8fd9\u662f\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u91c7\u7528\u95ed\u533a\u95f4\u6765\u67e5\u627e\u3002\u7ec8\u6b62\u6761\u4ef6\u662f \u627e\u5230 target \u6216 ",(0,r.jsx)(e.code,{children:"low = high + 1"}),"\u3002",(0,r.jsx)(e.br,{}),"\n","\u56e0\u4e3a\u91c7\u7528\u7684\u662f\u95ed\u533a\u95f4\uff0c\u6240\u4ee5\u6bcf\u6b21\u67e5\u627e\u90fd\u4e0d\u9700\u8981\u518d\u8003\u8651\u524d\u4e00\u6b21\u7684 mid \uff0c\u6240\u4ee5 low / high \u5206\u522b\u53d6 mid \u7684 \u524d / \u540e \u4e00\u4e2a\u5143\u7d20\u3002",(0,r.jsx)(e.br,{}),"\n","\u5e94\u7528\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.com/problems/binary-search/",children:"704. Binary Search"})]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"const search = (nums, target) => {\n    let low = 0,\n        high = nums.length - 1,\n        mid;\n\n    while (low <= high) {\n        mid = low + Math.floor((high - low) / 2);\n        if (nums[mid] === target) {\n            return mid;\n        } else if (nums[mid] < target) {\n            low = mid + 1;\n        } else if (nums[mid] > target) {\n            high = mid - 1;\n        }\n    }\n    return -1;\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u67e5\u627e\u5de6\u4fa7\u8fb9\u754c",children:"\u67e5\u627e\u5de6\u4fa7\u8fb9\u754c"}),"\n",(0,r.jsx)(e.p,{children:"\u67e5\u627e\u7b2c\u4e00\u4e2a >= target \u7684\u6570\u3002\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\uff0c\u6211\u4eec\u7ee7\u7eed\u91c7\u7528\u95ed\u533a\u95f4\u3002"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u82e5 nums[mid] >= target\uff0chigh \u53d6 mid \u524d\u4e00\u4e2a\u5143\u7d20"}),"\n",(0,r.jsx)(e.li,{children:"\u82e5 nums[mid] < target\uff0clow \u53d6 mid \u540e\u4e00\u4e2a\u5143\u7d20"}),"\n",(0,r.jsx)(e.li,{children:"\u6700\u540e\u5bf9 low \u8fdb\u884c\u68c0\u67e5\u540e\uff0c\u8fd4\u56de"}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["\u5982\u679c\u662f\u67e5\u627e\u7b2c\u4e00\u4e2a == target \u7684\u6570\uff0c\u53ea\u9700\u8981\u6539\u4e00\u4e0b\u9ad8\u4eae\u884c\u7684\u5224\u5b9a\u6761\u4ef6\u3002\n",(0,r.jsx)(e.code,{children:"low > nums.length - 1 || nums[low] !== target"})]}),"\n",(0,r.jsxs)(e.p,{children:["\u5e94\u7528\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.com/problems/search-insert-position/",children:"35. Search Insert Position"}),"\uff0c\u53ef\u4ee5\u770b\u505a\uff0c\u67e5\u627e\u7b2c\u4e00\u4e2a >= target \u7684\u6570\u3002"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",metastring:"{15}",children:"const search = (nums, target) => {\n    let low = 0,\n        high = nums.length - 1,\n        mid;\n\n    while (low <= high) {\n        mid = low + Math.floor((high - low) / 2);\n        if (nums[mid] >= target) {\n            high = mid - 1;\n        } else if (nums[mid] < target) {\n            low = mid + 1;\n        }\n    }\n\n    if (low > nums.length - 1) {\n        // \u68c0\u67e5\u8d8a\u754c\n        return -1;\n    }\n    return low;\n};\n"})}),"\n",(0,r.jsx)(e.h2,{id:"\u67e5\u627e\u53f3\u4fa7\u8fb9\u754c",children:"\u67e5\u627e\u53f3\u4fa7\u8fb9\u754c"}),"\n",(0,r.jsx)(e.p,{children:"\u67e5\u627e\u6700\u540e\u4e00\u4e2a <= target \u7684\u6570\u3002"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u82e5 nums[mid] <= target\uff0clow \u53d6 mid \u540e\u4e00\u4e2a\u5143\u7d20"}),"\n",(0,r.jsx)(e.li,{children:"\u82e5 nums[mid] > target\uff0chigh \u53d6 mid \u524d\u4e00\u4e2a\u5143\u7d20"}),"\n",(0,r.jsx)(e.li,{children:"\u6700\u540e\u5bf9 high \u8fdb\u884c\u68c0\u67e5\u540e\uff0c\u8fd4\u56de"}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["\u5982\u679c\u662f\u67e5\u627e\u6700\u540e\u4e00\u4e2a == target \u7684\u6570\uff0c\u53ea\u9700\u8981\u6539\u4e00\u4e0b\u9ad8\u4eae\u884c\u7684\u5224\u5b9a\u6761\u4ef6\u3002\n",(0,r.jsx)(e.code,{children:"high < 0 || nums[high] !== target"})]}),"\n",(0,r.jsxs)(e.p,{children:["\u5e94\u7528\uff1a",(0,r.jsx)(e.a,{href:"https://leetcode.com/problems/first-bad-version/",children:"278. First Bad Version"})]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"\u53ef\u4ee5\u770b\u505a\uff0c\u67e5\u627e\u7b2c\u4e00\u4e2a isBadVersion\uff0c\u5de6\u8fb9\u754c\u95ee\u9898"}),"\n",(0,r.jsx)(e.li,{children:"\u53ef\u4ee5\u770b\u505a\uff0c\u67e5\u627e\u6700\u540e\u4e00\u4e2a !isBadVersion\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u53f3\u8fb9\u754c\u95ee\u9898\u3002"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",metastring:"{15}",children:"const search = (nums, target) => {\n    let low = 0,\n        high = nums.length - 1,\n        mid;\n\n    while (low <= high) {\n        mid = low + Math.floor((high - low) / 2);\n        if (nums[mid] <= target) {\n            low = mid + 1;\n        } else {\n            high = mid - 1;\n        }\n    }\n\n    if (high < 0) {\n        return -1;\n    }\n    return high;\n};\n"})})]})}function c(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);