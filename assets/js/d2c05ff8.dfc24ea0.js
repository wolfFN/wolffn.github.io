"use strict";(self.webpackChunkdocusaurus_demo=self.webpackChunkdocusaurus_demo||[]).push([[1338],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(t),d=o,y=m["".concat(l,".").concat(d)]||m[d]||p[d]||a;return t?r.createElement(y,i(i({ref:n},u),{},{components:t})):r.createElement(y,i({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8630:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],c={title:"SQLAlchemy RelationShip"},l=void 0,s={unversionedId:"data-science/python/sql-alchemy-relationship",id:"data-science/python/sql-alchemy-relationship",isDocsHomePage:!1,title:"SQLAlchemy RelationShip",description:"One To One",source:"@site/docs/data-science/python/sql-alchemy-relationship.md",sourceDirName:"data-science/python",slug:"/data-science/python/sql-alchemy-relationship",permalink:"/docs/data-science/python/sql-alchemy-relationship",tags:[],version:"current",frontMatter:{title:"SQLAlchemy RelationShip"},sidebar:"Python",previous:{title:"SQLAlchemy",permalink:"/docs/data-science/python/sql-alchemy"}},u=[{value:"One To One",id:"one-to-one",children:[],level:2}],p={toc:u};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"one-to-one"},"One To One"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from sqlalchemy import create_engine,Integer, String, Float, Column, ForeignKey\nfrom sqlalchemy.orm import Session, relationship\nfrom sqlalchemy.ext.declarative import declarative_base\n\nBase = declarative_base()\n\nclass Video(Base):\n    __tablename__ = \"video\"\n\n    id = Column(Integer, primary_key=True)\n    code = Column('code', String(10))\n    img = Column('img', String(100))\n    score = Column('score', Float())\n\n    author_id = Column(Integer, ForeignKey('author.id') )\n    author = relationship('Author', uselist=False, back_populates='video' )\n\nclass Author(Base):\n    __tablename__ = \"author\"\n    id = Column(Integer, primary_key=True)\n    name = Column('name', String(100))\n\n    video = relationship('Video', uselist=False, back_populates='author' )\n\n\n\nengine = create_engine(\n    \"mysql+pymysql://nodejs:nodejs@localhost:3306/nodejs\", echo=True, future=True)\n\nBase.metadata.create_all(engine)\n\nsession = Session(engine)\n\n\nvideo_a = Video(code='new_video', img='123', score=9)\nauthor_a = Author(name='test_author')\n\nauthor_a.video = video_a\n# video_a.author = author_a\n\nsession.add(author_a)\nsession.add(video_a)\nsession.commit()\n\n\n\n")))}m.isMDXComponent=!0}}]);